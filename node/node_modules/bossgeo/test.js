// gecko testing here

// for each of the 206 places we have now in mongo from geoplanet, we want to query gecko and see what we get in return

var mongo = require('mongodb');
var rest = require('restler');
//var insertionCount = 0;
//var sleep = require('sleep');
var _ = require('underscore');

var server = new mongo.Server('localhost', 27017, {auto_reconnect: true, poolSize: 20});
var database = new mongo.Db('addy', server);
var names = {};

//var file = require('/Users/addy/Desktop/LandmarksBackup.txt');

// run from VPN too!

//database.open(function(err, db){
//    if(err){
//        throw new Error('Error found opening MongoDB database.');
//    }
//    db.authenticate('addy_mongo', 'WtbgVRKV', function(err, db){
//        if(err){
//            throw new Error('Error found authenticating against MongoDB database.');
//        }
//
//        // we are ready to go
//        // getPlaceDescendantsOfType('1940345', 20);
//        database.collection('gecko', {safe: true}, function(err, col){
//            var cursor = col.find({});
//            cursor.each(function(err, element){
//                // remove repeats
//                if(_.isNull(element) && _.isUndefined(element)){
//                    if(!(element.id in names)){
//                        names[element.id] = 0;
//                    } else {
//                        // remove by _id
//                        col.remove({_id: element._id}, function(err, res){
//                            console.log('removed duplicate!')
//                        });
//                    }
//                }



//                if(!element){
//                    console.log('element not found!');
//                } else {
//                    if(!element.loc){
//                        var criteria = {id: element.id};
//                        var newObj = element;
//                        element.loc = [element.lat, element.lon];
//                        delete newObj.lat;
//                        delete newObj.lon;
//                        col.update(criteria, newObj, function(err, res){
//                            console.log('updated item!');
//                        });
//                    }
//                }
//            });
//        });
//    });
//});




//database.open(function(err, db){
//    if(err){
//        throw new Error('Error found opening MongoDB database.');
//    }
//    db.authenticate('addy_mongo', 'WtbgVRKV', function(err, db){
//        if(err){
//            throw new Error('Error found authenticating against MongoDB database.');
//        }
//
//        // we are ready to go
//        // getPlaceDescendantsOfType('1940345', 20);
//        database.collection('geoplanet', {safe: true}, function(err, col){
//            var cursor = col.find({});
//            cursor.each(function(err, element){
//                if(!element){
//                    console.log('element not found!');
//                } else {
//                    sleep.sleep(1);
//                    var woeid = element.woeid;
//                    console.log('processing woeid ' + woeid);
//                    // get 50 landmarks in the vicinity of this coordinate
//                    rest.get('http://api.geckolandmarks.com/json', {
//                        query: {
//                            lat: element.centroid.latitude,
//                            lon: element.centroid.longitude,
//                            user_id: 'TEST_USER',
//                            api_key: 'EXAMPLE_KEY_3edaba1953abf86',
//                            count: 50
//                        }
//                    }).on('complete', function(data){
//                        if(data.landmarks !== undefined){
//                            var landmarks = data.landmarks;
//                            database.collection('gecko', {safe: true}, function(err, col){
//                                for(var i = 0; i < landmarks.length; i++){
//                                    col.insert(landmarks[i], {safe: true}, function(err, res){
//                                        console.log('processed woeid ' + woeid);
//                                    });
//                                }
//                                console.log('processed woeid ' + woeid);
//                            });
//                        } else {
//                            console.log(JSON.strigify(data));
//                        }
//                    });
//                }
//            });
//        });
//    });
//});

// http://api.geckolandmarks.com/json?lat=25.15956056126755&lon=55.21434545516968&user_id=TEST_USER&api_key=EXAMPLE_KEY_3edaba1953abf86

// GeoPlanet testing here

// for the city of dubai, get all descendants of type 20 (point of interest), a total of 206 entities, and for each of these, get the woeid and perform a lookup to get the coordinates from the centroid property, insert everything into mongo


var geoPlanetAppId = 'vr5mijnV34GBqIEeXd4ZPjOVto_ph9OmBQqUxYL2lCeumvkC3kuSSAEVPnv8h3MCSiT9iSq6XPq.FRebHkZQRV5eD1lvjTU-';




function getPlaceDescendantsOfType(place, type) {
    // setting count to zero gets everything, instead of the default of 10 elements
    rest.get('http://where.yahooapis.com/v1/place/' + place + '/descendants.type(' + type + ');count=0', {
        query: {
            format: 'json',
            appid: geoPlanetAppId
        }
    }).on('complete', function(data){
        for(var i = 0; i < data.places.place.length; i++){
            lookUpPlaceByWoeidAndInsertToMongo(data.places.place[i].woeid);
        }
    });
}

function lookUpPlaceByWoeidAndInsertToMongo(woeid){
    rest.get('http://where.yahooapis.com/v1/place/' + woeid, {
        query: {
            format: 'json',
            appid: geoPlanetAppId
        }
    }).on('complete', function(data){
        // insert everything into mongo
        var place = data.place;
        database.collection('geoplanet', {safe: true}, function(err, col){
            col.insert(place, {safe: true}, function(err, res){
                insertionCount = insertionCount + 1;
                console.log('inserted ' + insertionCount + ' places');
            });
        });
    });
}



var BossGeoClient = require('./lib/bossgeo').BossGeoClient;

var bossgeo = new BossGeoClient(
    'dj0yJmk9QXRWeUI0NFE2NnlpJmQ9WVdrOVkwaFpVblkzTkcwbWNHbzlPVEkyTkRFeE1UWXkmcz1jb25zdW1lcnNlY3JldCZ4PTgw',
    '6b11b3a501b00b95d17fc2ad5c3d08c36e9f42ce'
);

// (25.20548476379409, 55.24801254272461)

// 25.20548476379409+55.24801254272461+

bossgeo.placefinder({
    q: '25.149543291828397+55.2034315466880+',
//    level3: 'Dubai',
//    level0: 'United Arab Emirates',
//    name: 'hotel',
//    name: 'jumeirah',
    gflags: 'ACR',
    flags: 'GX'
//    locale: 'ar_jo'
//    line1: '7B Street',
//    line2: 'Dubai, UAE'
//    level3: 'Dubai',
//    country: 'United Arab Emirates'
//    location: 'burj, Dubai, UAE',
//    count: 1
//    q: 'sutter st, san francisco'
//    q: '59A Street, Dubai, UAE'
}, function(err, res) {
    if (err) {
        console.log('error: ' + err);
        return;
    }

    console.log(JSON.stringify(res, null, 4));
});

bossgeo.placespotter({
    documentType: 'text/plain',
    documentContent: 'I live in Bilbao.'
}, function(err, res) {
    if (err) {
        console.log('error: ' + err);
        return;
    }

    console.log(JSON.stringify(res, null, 4));
});

